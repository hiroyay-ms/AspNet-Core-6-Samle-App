name: Build and deploy Web Api to an Azure Web App

on:
  workflow_dispatch:

env:
  API_PATH: './src/Api'
  APP_PATH: './src/Web1'

jobs:
  build-api:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Container
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true
      
      - name: Build with dotnet
        run: dotnet build ${{ env.API_PATH }} --configuration Release

      - name: dotnet publish
        run: dotnet publish ${{ env.API_PATH }} -c Release -o ${{ env.API_PATH }}/myapi

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: .net-api
          path: ${{ env.APP_PATH }}/myapi

  push-api:
    runs-on: ubuntu-latest
    needs: build-api

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-api
          path: release
        
      - name: Login via Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGINSERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        
      - name: Docker build and push (API)
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGINSERVER }}/api:${{ github.sha }} -f ./.docker/Api/dockerfile
          docker push ${{ secrets.REGISTRY_LOGINSERVER }}/api:${{ github.sha }}    

  build-mvc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Container
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true
      
      - name: Build with dotnet
        run: dotnet build ${{ env.APP_PATH }} --configuration Release

      - name: dotnet publish
        run: dotnet publish ${{ env.APP_PATH }} -c Release -o ${{ env.APP_PATH }}/myapp

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{ env.APP_PATH }}/myapp

  push-mvc:
    runs-on: ubuntu-latest
    needs: build-mvc

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          path: release
        
      - name: Login via Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGINSERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        
      - name: Docker build and push (MVC)
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGINSERVER }}/mvc:${{ github.sha }} -f ./.docker/Api/dockerfile
          docker push ${{ secrets.REGISTRY_LOGINSERVER }}/mvc:${{ github.sha }}    
